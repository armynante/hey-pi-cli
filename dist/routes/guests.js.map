{"version":3,"sources":["../../src/routes/guests.js"],"names":[],"mappings":"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","file":"guests.js","sourcesContent":["import express from 'express'\nimport Mongo from '../server.js';\nimport {User} from '../models/user.js';\nimport config from '../config.js';\nimport utilities from '../utilities.js';\nimport jwt from 'jsonwebtoken';\nimport bodyParser from 'body-parser';\nimport bcrypt from 'bcryptjs';\nimport { ObjectID } from \"mongodb\";\n\nvar router = express.Router();\n\n\nrouter.post('/',(req,res) => {\n  var guest = new User(req.body.email);\n  guest.isGuest = true;\n  guest.usersId = req.user._id;\n  guest.setPassword(req.body.pass).then(()=> {\n    return guest.save();\n  })\n  .then((resp) => {\n    var html = '';\n    var emailSubject = 'Welocome to Hey-P.I';\n    if (req.body.htmlEmailMessage !== null && req.body.htmlEmailMessage !== '') {\n      html = req.body.htmlEmailMessage;\n    }\n    if (req.body.emailSubject !== null && req.body.emailSubject !== '') {\n      emailSubject = req.body.emailSubject;\n    }\n    html += \"<br><p>please click on the link to confirm account<p></br><a href='http://hey-pi.com/confirm?token=\"+ resp.message.token + \"'>confirm account...</a>\";\n    utilities.sendEmail(guest.email, emailSubject, html);\n    res.status(resp.code).json(resp.message);\n  })\n\t.catch((err) => {\n    console.log(err);\n\t\tres.status(err.code).json(err);\n\t})\n});\n\nrouter.post('/authorize',(req,res) => {\n\tvar email = req.body.email || req.query.email;\n\tvar pass = req.body.pass || req.query.pass;\n\n\tvar user = { \"email\": email, \"pass\": pass};\n\t//find user and test pass\n\tMongo._getData(['users','email_is_' + email]).then((resp) => {\n\t\t//if we get a match\n\t\tif (resp.message.length) {\n\t\t\tvar user = resp.message[0];\n\t\t\t//test the password\n\t\t\tbcrypt.compare(pass, user.password, (err,valid) => {\n\t\t\t\tif(valid) {\n\t\t\t\t\tvar token = jwt.sign(user, config.secret, {\n\t\t\t\t\t\texpiresIn: \"30d\" //24r\n\t\t\t\t\t});\n\n\t\t\t\t\tuser['token'] = token;\n\t\t\t\t\tdelete user['pass'];\n\t\t\t\t\tuser['authorized'] = true;\n\t\t\t\t\tres.json(user);\n\n\t\t\t\t} else {\n\t\t\t\t\tres.status(401).json({success: false, message:\"password incorrect\"});\n\t\t\t\t}\n\n\t\t\t});\n\t\t} else {\n\t\t\tres.status(404).json({success: false, message:\"no user found with that email\"});\n\t\t}\n\t})\n\t.catch((err) => {\n    console.log(err);\n\t\tres.status(500).json(err)\n\t});\n});\n\nrouter.get('/', (req, res) => {\n \tMongo._get('users',{'usersId' : req.user._id}).then((resp) => {\n    console.log(resp);\n      req.user.reads++;\n      Mongo._update('users',{'_id':req.user._id}, req.user);\n\t\t\tres.status(200).json(resp);\n\t\t})\n\t\t.catch((err) => {\n      console.log(err);\n\t\t\tres.json(err);\n\t\t});\n\t});\n\nrouter.get('/:userId', (req, res) => {\n  try {\n    var id = new ObjectID(req.params.userId);\n  } catch (e) {\n    res.status(500).json({message:\"Error parsing id. Please check too see if the id is valid.\"});\n  }\n\n \tMongo._get('users',{'usersId' : req.user._id, \"_id\":id}).then((resp) => {\n      req.user.reads++;\n      Mongo._update('users',{'_id':req.user._id}, req.user);\n\t\t\tres.status(200).json(resp);\n\t\t})\n\t\t.catch((err) => {\n      console.log(err);\n\t\t\tres.json(err);\n\t\t});\n\t});\n\nrouter.put('/:userId', (req, res) => {\n\n  try {\n\n    var id = new ObjectID(req.params.userId);\n\n    if (req.body._id !== undefined) {\n      req.body._id = new ObjectID(req.body._id);\n    }\n    if (req.body.usersId !== undefined) {\n      req.body.usersId = new ObjectID(req.body.usersId);\n    }\n\n  } catch (e) {\n    res.status(500).json({message:\"Error parsing id. Please check too see if the id is valid.\"});\n  }\n\n \tMongo._update('users',{\"_id\":id},req.body).then((resp) => {\n      req.user.writes++;\n      Mongo._update('users',{'_id':req.user._id}, req.user);\n\t\t\tres.status(200).json({\"success\":true,\"message\":\"guest record updated\"});\n\t\t})\n\t\t.catch((err) => {\n      res.status(err.message.code).json({message: err.message.message});\n\t\t});\n\t});\n\n  //DELETE\n  router.delete(\"/\", (req,resp) => {\n    res.status(405).json({success:false, message: \"batch DELETE operations not allowed on guests collection\"});\n  })\n\n\n  //DELETE ONE\n  router.delete(\"/:userId\", (req,res) => {\n    try {\n      var id = new ObjectID(req.params.userId);\n    } catch (e) {\n      res.status(500).json({message:\"Error parsing id. Please check too see if the id is valid.\"});\n    }\n\n    //check to see if user owns the record\n    Mongo._get('users',{\"usersId\" : req.user._id, \"_id\": id } ).then((resp) => {\n      if (resp[0] !== undefined) {\n        Mongo._delete('users',{'_id': id}).then((resp) => {\n          res.status(resp.code).json(resp.message);\n        });\n      } else {\n\t\t\t  res.status(400).json({success:false, message:\"No record fount to delete with that id\"});\n      }\n\t\t})\n\t\t.catch((err) => {\n      console.log(err);\n\t\t\tres.json(err);\n\t\t});\n  })\n\n\n\nexport default router\n"]}