{"version":3,"sources":["../../src/routes/api.js"],"names":[],"mappings":"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","file":"api.js","sourcesContent":["import express from 'express';\nimport Mongo from '../server.js';\nimport bodyParser from 'body-parser';\nimport { ObjectID } from \"mongodb\";\nimport guests from './guests.js';\nimport utilities from '../utilities.js';\nimport _ from 'underscore';\nvar router = express.Router();\n\n//assigns the users users or \"guests\" an api key and password.\n//also deals with lost passwords\nrouter.use('/guests',guests);\n\nrouter.get('/collections', (req,res) => {\n\tMongo.collectionNames().then((resp) => {\n\t\t//remove system collections like 'schemas' & 'system.indexes'\n\t\tvar collections = [];\n\n\t\t_.each(resp.message, (doc) => {\n\n\t\t\tif(doc.name !== 'schemas' && doc.name !== 'system.indexes') {\n\t\t\t\tcollections.push(doc)\n\t\t\t}\n\n\t\t});\n\n\t\tres.status(resp.code).json(collections);\n\t})\n\t.catch((err) => {\n\t\tconsole.log(err);\n\t\tres.json(\"error pulling collection names\");\n\t})\n})\n\nrouter.post('/batch/:collection', (req,res) => {\n\t_.map(req.body.operations, (obj) => {\n\t\tif (obj.method === 'insert') {\n\t\t\tobj.document['heypi_id'] = req.user._id\n\t\t}\n\t});\n\n\n\tMongo.batchOperation(req.params.collection,req.body.operations).then((resp) => {\n\t\tres.json(resp);\n\t})\n\t.catch((err) => {\n\t\tconsole.log(err);\n\t\tres.json(err);\n\t})\n})\n\nrouter.post('/batch_insert/:collection', (req,res) => {\n\t\tvar docs = [];\n\n\t\t_.each(req.body, (obj) => {\n\t\t\tobj['heypi_id'] = req.user._id;\n\t\t\tdocs.push({ method: \"insert\", document: obj })\n\t\t});\n\t\tMongo.batchOperation(req.params.collection,docs).then((resp) => {\n\t\t\tres.json(resp);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tres.json(err);\n\t\t})\n})\n\n\n\nrouter.get('/*', (req, res) => {\n\n\t//structure the query\n\tif (req.query.sort !== undefined && req.query.sort !== null)  {\n\t\treq.query.sort = utilities.sortParam(req.query.sort);\n\t} else {\n\t\treq.query.sort = {};\n\t}\n\n\tif (req.query.skip === undefined || req.query.skip === null)  req.query.skip = 0;\n\tif (req.query.limit === undefined || req.query.limit === null)  req.query.limit = 50;\n\n\treq.query.limit = parseInt(req.query.limit);\n\treq.query.skip = parseInt(req.query.skip);\n\n\n\tif(req.strip_path[0] !== undefined) {\n \t  Mongo.getData(req.strip_path, req.user._id, req.query.skip, req.query.sort, req.query.limit).then((resp) => {\n      req.user.reads++;\n      Mongo.update('users',{'_id':req.user._id}, req.user);\n\t\t\tres.status(resp.code).json(resp.message);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tres.json(\"error querying path \" + req.strip_path);\n\t\t});\n\t} else {\n\t\tres.status(404).json(\"Hi!\");\n\t}\n});\n\nrouter.post('/*', (req,res) => {\n\tMongo.saveData(req.strip_path, req.body, req.user._id).then((resp) => {\n\n    req.user.writes++;\n    req.user.numDocs++;\n\n    Mongo.update(\"users\",{\"_id\":req.user._id}, req.user);\n\t\tvar loc = \"/\" + req.strip_path + \"/\" +resp.message.id;\n\n\t\tres.status(201).location(loc).json(resp.message)\n\t})\n\t.catch((err) => {\n\t\tres.status(err.code).json(\"error saving data\");\n\t});\n})\n\nrouter.put('/*', (req,res) => {\n\tMongo.updateData(req.strip_path, req.body, req.user._id).then((resp) => {\n    req.user.writes++;\n    Mongo.update('users',{'_id':new ObjectID(req.user._id)}, req.user);\n\t\tres.status(resp.code).json(resp.message);\n\t})\n\t.catch((err) => {\n\t\tres.status(500).json(err.message);\n\t});\n})\n\nrouter.delete('/*', (req,res) => {\n\tMongo.delData(req.strip_path, req.user._id).then((resp) => {\n    req.user.writes += resp.docDelta;\n    req.user.numDocs -= resp.docDelta;\n    Mongo.update('users',{'_id':new ObjectID(req.user._id)}, req.user);\n\t\tres.status(resp.code).json(resp.message);\n\t})\n\t.catch((err) => {\n\t\tres.status(err.code).json(\"error updating data\");\n\t});\n});\n\nexport default router\n"]}