{"version":3,"sources":["../src/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["\"use strict\";\n\nimport { MongoClient } from './MongoClient.js';\nimport config from './config.js';\nimport jwt from 'jsonwebtoken';\nimport utilities from './utilities.js';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport morgan from 'morgan';\nimport { ObjectID } from 'mongodb';\nimport path from 'path';\n\n//routers\nimport auth from './routes/auth.js';\nimport register from './routes/register.js';\nimport confirm from './routes/confirm.js';\nimport api from './routes/api.js';\n\n//initialize express:\nvar app = express();\napp.set('view engine', 'jade');\napp.set('views', __dirname + '/views')\napp.use(express.static('public'));\napp.use('/bower_components', express.static(path.join(__dirname, '../bower_components')));\n//load the database\nvar Mongo = new MongoClient();\nexport default Mongo;\nMongo._dbConnect(config.mongoUrl);\n\n//setiings\napp.use(morgan('dev')); //logging\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\n//middlewares\nvar checkAuth = function(req, res, next) {\n\tvar token = req.body.token || req.query.token || req.headers['x-access-token'];\n\tif (token) {\n\t\tjwt.verify(token, config.secret, (err, validUser) => {\n\t\t\tif (err) {\n\t\t\t\tres.status(401).json({ success: false, message: 'Failed to authenticate token.' });\n\t\t\t} else {\n\t\t\t\tMongo._get('users',{'_id': new ObjectID(validUser._id)}).then((docs) => {\n\t\t\t\t\tif (docs.length > 0) {\n\t\t\t\t\t\treq.user = docs[0]\n\t\t\t\t\t\tnext();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.status(500).json({success:false, message:\"Token authentication failed, can't a find user with that token. Please re-authorize and try again.\"});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tres.code(500).json(err.message);\n\t\t\t\t});\n\t\t\t\t//user is stuck withthe token vesion// need to re load the user object\n\t\t\t}\n\t\t});\n\t} else {\n\t\tres.status(401).json({ success: false, message: 'Failed to provide authentication token.' });\n\t}\n}\n\nvar confirmed = function(req, res, next) {\n\tif (!req.user.confirmed) {\n\t\tres.status(400).json({success: false, message: \"please confirm account\"});\n\t} else {\n\t\tnext();\n\t}\n}\n\nvar urlStrip = function(req, res, next) {\n\tvar path = utilities.stripPath(req.url);\n\treq.strip_path = path;\n\tnext();\n};\n\n//pre-auth routes\napp.get('/', function(req,res) {\n\tres.render('home', {\"email\":\"mr.mixx@naazdy.net\",\"token\":\"LONG_ASS_TOKEN\",\"password\":\"your_password\"})\n});\n\n//for loading jade partials\napp.get('/templates/:template', function(req,res) {\n\tres.render('templates/' + req.params.template);\n})\n\napp.use('/register', register);\napp.use('/authorize', auth);\n\n//check authentication before proceeding to api\napp.use(checkAuth);\n\n//confirmation\napp.use('/confirm', confirm);\napp.use(confirmed);\n\n//strip path\napp.use(urlStrip);\n\n//api routes\napp.use('/api', api);\n\napp.get('*', function(req, res){\n  res.send('can\\'t find that!', 404);\n});\n\n\nvar server = app.listen(config.port, function() {\n\tconsole.log('Listening at http://localhost:%s', config.port);\n});\n"]}