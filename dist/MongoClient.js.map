{"version":3,"sources":["../src/MongoClient.js"],"names":[],"mappings":"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","file":"MongoClient.js","sourcesContent":["\"use strict\";\n\nimport utilities from './utilities.js';\nimport collectionUtil from './collectionUtil.js';\nimport _ from \"underscore\";\nimport { MongoClient as Mongo }\nfrom \"mongodb\";\nimport { ObjectID }\nfrom \"mongodb\";\n\nexport class MongoClient extends Mongo {\n\n  constructor() {\n    super();\n    this.db = null;\n  }\n\n  collectionNames() {\n    var promise = new Promise(\n      (resolve, reject) => {\n        this.db.listCollections()\n          .toArray((err, collections) => {\n\n            if (err) {\n              console.log(err);\n              reject({\n                code: 500,\n                message: err\n              })\n            }\n\n            resolve({\n              code: 200,\n              message: collections\n            });\n        });\n      }\n    )\n    return promise;\n  }\n\n  dbConnect(url) {\n    var _this = this;\n    Mongo.connect(url, function (err, db) {\n\n      if (err) throw err;\n\n      db.collection('users')\n        .ensureIndex({ \"email\": 1 }, { unique: true });\n        _this.db = db\n      });\n  }\n\n  loadCollection(name) {\n    var promise = new Promise(\n      (resolve, reject) => {\n        this.db.collection(name, (err, collection) => {\n\n          if (err) {\n            reject(err);\n          }\n          else {\n            resolve(collection);\n          }\n\n        });\n      }\n    );\n    return promise;\n  }\n\n  batchOperation(collectionName, array) {\n    var promise = new Promise(\n      (resolve, reject) => {\n        this.loadCollection(collectionName)\n          .then((collection) => {\n\n            var batch = collection.initializeUnorderedBulkOp();\n            _.each(array, (operation) => {\n\n              //convert back to ObjectIds\n              if (operation.method !== 'insert') {\n                console.log(operation);\n                console.log('insert');\n                operation.document._id = new ObjectID(operation.document._id);\n              }\n\n              switch (operation.method) {\n\n                case \"delete\":\n                  console.log('DELETING');\n                  console.log(operation.document);\n                  batch.find(operation.document).remove();\n                  break;\n\n                case \"insert\":\n                  operation.document['created_at'] = Date.now();\n                  batch.insert(operation.document);\n                  break;\n\n                case \"update\":\n                  operation.document['updated_at'] = Date.now();\n                  batch.find(operation.document)\n                    .upsert()\n                    .updateOne({\n                      $set: operation.document\n                    });\n                  break;\n\n                case \"upsert\":\n                  if (operation.document['created_at'] === undefined) {\n                    operation.document['created_at'] = Date.now();\n                  }\n                  operation.document['updated_at'] = Date.now();\n                  batch.find(operation.document)\n                    .updateOne({\n                      $set: operation.document\n                    });\n                  break;\n\n                default:\n                  console.log(\" not found\");\n            }\n          })\n\n          batch.execute(function (err, result) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve({ \"bulkresults\": result.ok });\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        })\n      }\n    );\n    return promise;\n  }\n\n  save(name, obj) {\n    var promise = new Promise(\n      (resolve, reject) => {\n        this.db.collection(name)\n        .insertOne(obj, (err, resp) => {\n          //check for duplicate entry\n          if (err !== null) {\n            reject({\n              code: 400,\n              message: \"looks like that email is already taken\"\n            })\n          } else {\n            resolve(resp.ops[0]);\n          }\n        });\n      }\n    );\n    return promise;\n  }\n\n  get(collectionName, query) {\n    var promise = new Promise(\n      (resolve, reject) => {\n        this.db.collection(collectionName)\n          .find(query, (err, resp) => {\n\n          //check for duplicate entry\n            if (err !== null) {\n              reject({ code: 500, message: \"error querying \" + query })\n            } else {\n\n              resp.toArray((err, docs) => {\n                if (err !== null) {\n                  reject(err);\n                } else {\n                  resolve(docs);\n                }\n\n              })\n\n            }\n\n          });\n        }\n      );\n    return promise;\n  }\n\n  delete(collectionName, query) {\n    var promise = new Promise(\n      (resolve, reject) => {\n        this.db.collection(collectionName)\n        .remove(query, {\n          justOne: true\n        }, (err, resp) => {\n\n          if (err !== null) {\n            reject({\n              code: 500,\n              message: \"error deleting \" + query\n            })\n          } else {\n            resolve({\n              code: 200,\n              message: resp.result.n + \" document deleted\"\n            });\n          }\n\n        });\n      }\n    );\n    return promise;\n  }\n\n\n  //simple update for admin functions\n  update(name, query, obj) {\n    obj['updated_at'] = Date.now();\n    var promise = new Promise(\n      (resolve, reject) => {\n        this.db.collection(name)\n        .updateOne(query, { $set: obj }, (err, resp) => {\n\n          //check for duplicate entry\n          if (err !== null) {\n            reject({ code: 400, message: err })\n          } else {\n            resolve(resp);\n          }\n\n        });\n      }\n    );\n    return promise;\n  }\n\n  getData(path, id, skipVal, sortVal, limitVal) {\n    var promise = new Promise((resolve, reject) => {\n      this.propagateQuery(path)\n        .then((resolveObj) => {\n\n          var collection = resolveObj.collection,\n              mongoQuery = resolveObj.mongoQuery;\n\n          //only load data created by the user\n          mongoQuery['heypi_id'] = id;\n          collection.find(mongoQuery, { heypi_id: 0 })\n          .sort(sortVal)\n          .limit(limitVal)\n          .skip(skipVal)\n          .toArray((err, docs) => {\n\n            var docs = (docs);\n\n            if (err) reject({\n              \"code\": 500,\n              \"message\": err\n            });\n\n            collection.count((err, count) => {\n              if (err) reject({ \"code\": 500, \"message\": err });\n\n              var responseData = {\n                \"code\": 200,\n                \"message\": {\n                  \"documents\": docs,\n                  \"total\": count\n                }\n              };\n\n              resolve(responseData);\n            });\n          });\n\n      }, (err) => {\n\n        var responseData = {\n          \"code\": 500,\n          \"message\": err\n        };\n\n        reject(responseData);\n      });\n    });\n    return promise;\n  }\n\n  delData(path, id) {\n\n    var promise = new Promise((resolve, reject) => {\n\n      this.propagateQuery(path, id)\n      .then((resolveObj) => {\n        var collection = resolveObj.collection;\n        var mongoQuery = resolveObj.mongoQuery;\n        mongoQuery['heypi_id'] = id;\n        console.log(mongoQuery);\n        collection.deleteMany(mongoQuery, (err, result) => {\n\n          if (err) reject({\n            \"code\": 500,\n            \"message\": err\n          });\n\n          var numDocsDeleted = result.deletedCount;\n          var responseData = {\n            \"code\": 200,\n            \"message\": \"Deleteted \" + numDocsDeleted + \" documents.\",\n            \"docDelta\": numDocsDeleted\n          };\n\n          resolve(responseData);\n        });\n      }, (err) => {\n        var responseData = {\n          \"code\": 500,\n          \"message\": err\n        };\n\n        reject(responseData);\n      });\n    });\n    return promise;\n  }\n\n  propagateQuery(path, id) {\n    var pathArray = [];\n    if (path.length % 2 === 1) path.push(\"\");\n    var promise = new Promise(\n      (resolve, reject) => {\n        for (var i = 0; i < path.length; i += 2) {\n          pathArray.push([path[i], path[i + 1]]);\n        }\n\n        var chain = pathArray.reduce((previous, item, index, array) => {\n\n          return previous.then((result) => {\n            var collectionName = item[0],\n                query = item[1],\n                mongoQuery = utilities.parseQuery(query);\n\n            if (mongoQuery === null) {\n              reject(\"bad request\");\n            }\n\n            //push id into query\n            mongoQuery['heypi_id'] = id;\n            mongoQuery = _.extend(mongoQuery, result.fkQuery);\n\n            var promise = new Promise(\n              (resolve, reject) => {\n                this.loadCollection(collectionName)\n                .then((collection) => {\n\n                  if (index !== (pathArray.length - 1)) {\n                    var cursor = collection.find(mongoQuery);\n\n                    cursor.toArray((err, docs) => {\n\n                      if (err) {\n                        reject(err);\n                      } else {\n                        var keys = _.pluck(docs, \"_id\");\n\n                        for (var i = 0; i < keys.length; i++) {\n                          keys[i] = keys[i].toString();\n                        };\n\n                        var fkFieldName = collectionName + \"id\",\n                            fkQuery = {};\n\n                        fkQuery[fkFieldName] = { $in: keys };\n\n                        resolve({\n                          doc: docs,\n                          fkQuery: fkQuery\n                        });\n\n                      }\n                    })\n                  } else {\n                    var resolveObj = {};\n                    resolveObj[\"collection\"] = collection;\n                    resolveObj[\"mongoQuery\"] = mongoQuery;\n                    resolve(resolveObj);\n                  }\n\n                });\n              });\n            return promise;\n          });\n        }, new Promise(\n          (resolve, reject) => { //initial value given to reduce\n\n            var result = {};\n            result[\"fkQuery\"] = {};\n            resolve(result);\n          }));\n\n        chain.then((cursor) => {\n          //var responseData = {\"code\": 200, \"body\": result.doc};\n          resolve(cursor);\n        }, (err) => {\n          console.log('got into error clause after chain is finished' + err);\n          //var responseData = {\"code\": 500, \"body\": err};\n          reject(err);\n        });\n      });\n    return promise;\n  }\n\n  updateData(path, data, id) {\n\n    var collectionName = path[0];\n\n    var promise = new Promise(\n      (resolve, reject) => {\n\n        this.loadCollection(collectionName)\n\n        .then((collection) => {\n          return updateDataHelper(collection, id);\n        })\n\n        .then((response) => {\n\n          var modifiedCount = response.result.modifiedCount;\n\n          if (modifiedCount > 0) {\n            var responseData = {\n              \"code\": 200,\n              \"message\": \"Updated \" + modifiedCount + \" documents\"\n            };\n          } else {\n            var responseData = {\n              \"code\": 204,\n              \"message\": \"No documents updated :(\"\n            };\n          }\n\n          resolve(responseData);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      }\n    );\n\n    return promise;\n\n\n    function updateDataHelper(collection, id) {\n      // remove id field from obj\n      var promise = new Promise(\n        (resolve, reject) => {\n\n          delete data[\"id\"];\n\n          if (path.length > 1) {\n            var mongoQuery = utilities.parseQuery(path[1]);\n            mongoQuery['heypi_id'] = id;\n          }\n\n          if (path.length == 2) {\n            collectionUtil.updateOne(collection, mongoQuery, data)\n              .then((result) => {\n\n                resolve(result)\n              }, (err) => {\n                reject(err);\n              })\n          } else {\n            var responseData = {\n              \"code\": 400,\n              \"message\": \"Cannot PUT data on collections.\"\n            };\n            reject(responseData)\n          }\n\n        }\n      );\n      return promise;\n    }\n  }\n\n  saveData(path, data, id) {\n    var _this = this,\n        collectionName = path[0];\n\n    var promise = new Promise(\n      (resolve, reject) => {\n        _this.loadCollection(collectionName)\n        .then((collection) => {\n          return saveDataHelper(collection, id);\n        })\n\n        .then((docs) => {\n          docs = utilities.sanitizeId(docs);\n          var responseData = {\n            \"code\": 201,\n            \"message\": docs\n          };\n          resolve(responseData);\n\n        }, (err) => {\n\n          var responseData = {\n            \"code\": 500,\n            \"message\": err.message\n          };\n\n          resolve(responseData);\n        });\n      }\n    );\n\n    return promise;\n\n\n    function saveDataHelper(collection, id) {\n      data['heypi_id'] = id;\n      data['created_at'] = Date.now();\n      if (path.length > 1) {\n        var mongoQuery = utilities.parseQuery(path[1]);\n        if (mongoQuery !== null) {\n          mongoQuery['heypi_id'] = id;\n        }\n      }\n\n      if (path.length === 1) {\n        var promise = new Promise(\n          (resolve, reject) => {\n            collection.insertOne( data, function (err, result) {\n\n                if (err) {\n                  reject(err);\n                } else {\n                  var data = result.ops[0]\n                  delete data['heypi_id'];\n                  resolve(result.ops[0]);\n                }\n\n              });\n          }\n        );\n\n        return promise;\n\n      } else if (path.length == 2) {\n        //TODO: need to take this out into its own function!!!\n\n        var promise = new Promise(\n          (resolve, reject) => {\n            collectionUtil.updateOne(collection, mongoQuery, data)\n            .then((result) => {\n              resolve(result)\n\n            }, (err) => {\n              reject(err);\n            })\n          }\n        );\n\n        return promise;\n\n      } else if (path.length === 3) {\n        var collectionToAddTo = path[2],\n            parentID;\n\n        var promise = new Promise(\n          (resolve, reject) => {\n            collectionUtil.findOne(collection, mongoQuery)\n\n            .then((doc) => {\n              parentID = doc._id.toString();\n              return _this.loadCollection(collectionToAddTo);\n            })\n\n            .then((collectionToAddToObj) => {\n              var obj = {},\n                  keyName = collectionName + \"id\";\n\n              obj[keyName] = parentID;\n              data = _.extend(data, obj);\n\n              return collectionUtil.insertOne(collectionToAddToObj, data);\n            })\n\n            .then((result) => {\n              resolve(result.ops[0]);\n            }, (err) => {\n              reject(err);\n            });\n          }\n        );\n        return promise;\n      }\n    }\n  }\n}\n"]}